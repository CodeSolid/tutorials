// java and war plugins provide basic build support for our main project.
plugins {
    id 'java'
    id 'war'
}

// gretty lets us easily test our war using an embedded tomcat or embedded
// jetty server.  
apply from: 'https://raw.github.com/akhikhl/gretty/master/pluginScripts/gretty.plugin'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // Compile also appears to be sufficient to include in jar, but check on this
    compile  'org.slf4j:slf4j-api:1.7.21'
    compile project(':jar_dependency')    

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4+'
}

// Configure gretty.  The main addition here is to add the jar_depencency/.. 
// line to the list. The rest were defaults, but I found that adding 
// one directory meant you had to re-add the defaults explicitly.
gretty {

    scanDir "jar_dependency/src/main/java"
/*    scanDir "${projectDir}/src/main/java"
    scanDir "${projectDir}/src/main/groovy"   
    scanDir "${projectDir}/src/main/resources"
    scanDir "${projectDir}/build/classes/main"
    scanDir "${projectDir}/build/resources/main"
*/

    // fastReload "${projectDir}/src/main/webapp"
}
